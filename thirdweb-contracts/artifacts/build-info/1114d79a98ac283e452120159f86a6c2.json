{"id":"1114d79a98ac283e452120159f86a6c2","_format":"hh-sol-build-info-1","solcVersion":"0.8.9","solcLongVersion":"0.8.9+commit.e5eed63a","input":{"language":"Solidity","sources":{"@thirdweb-dev/contracts/extension/ContractMetadata.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.0;\n\nimport \"./interface/IContractMetadata.sol\";\n\n/**\n *  @title   Contract Metadata\n *  @notice  Thirdweb's `ContractMetadata` is a contract extension for any base contracts. It lets you set a metadata URI\n *           for you contract.\n *           Additionally, `ContractMetadata` is necessary for NFT contracts that want royalties to get distributed on OpenSea.\n */\n\nabstract contract ContractMetadata is IContractMetadata {\n    /// @notice Returns the contract metadata URI.\n    string public override contractURI;\n\n    /**\n     *  @notice         Lets a contract admin set the URI for contract-level metadata.\n     *  @dev            Caller should be authorized to setup contractURI, e.g. contract admin.\n     *                  See {_canSetContractURI}.\n     *                  Emits {ContractURIUpdated Event}.\n     *\n     *  @param _uri     keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")\n     */\n    function setContractURI(string memory _uri) external override {\n        if (!_canSetContractURI()) {\n            revert(\"Not authorized\");\n        }\n\n        _setupContractURI(_uri);\n    }\n\n    /// @dev Lets a contract admin set the URI for contract-level metadata.\n    function _setupContractURI(string memory _uri) internal {\n        string memory prevURI = contractURI;\n        contractURI = _uri;\n\n        emit ContractURIUpdated(prevURI, _uri);\n    }\n\n    /// @dev Returns whether contract metadata can be set in the given execution context.\n    function _canSetContractURI() internal view virtual returns (bool);\n}\n"},"@thirdweb-dev/contracts/extension/interface/IContractMetadata.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.0;\n\n/**\n *  Thirdweb's `ContractMetadata` is a contract extension for any base contracts. It lets you set a metadata URI\n *  for you contract.\n *\n *  Additionally, `ContractMetadata` is necessary for NFT contracts that want royalties to get distributed on OpenSea.\n */\n\ninterface IContractMetadata {\n    /// @dev Returns the metadata URI of the contract.\n    function contractURI() external view returns (string memory);\n\n    /**\n     *  @dev Sets contract URI for the storefront-level metadata of the contract.\n     *       Only module admin can call this function.\n     */\n    function setContractURI(string calldata _uri) external;\n\n    /// @dev Emitted when the contract URI is updated.\n    event ContractURIUpdated(string prevURI, string newURI);\n}\n"},"contracts/Notes.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.0;\nimport \"@thirdweb-dev/contracts/extension/ContractMetadata.sol\";\nabstract contract Notes is ContractMetadata{\n    struct Note{\n         string note;\n         address uid;\n    }\n    \n\n    constructor(string memory _note) {\n        Note memory myStruct = Note(_note,msg.sender);\n    }\n\n    Note[] public notes;\n    function createNote(string memory _note) public{   \n        notes.push(Note(_note,msg.sender));\n    }\n    function getNotes() public view returns(Note[] memory){   \n        return notes;   \n    }\n}\n/*\npragma solidity ^0.8.9;\ncontract Notes{\n\n    struct Note{\n         string note;\n    }\n\n    mapping(address => Note) public notes;\n\n    string[] public userNotes ;\n\n    function createNote(string memory note) public{\n//map address type to User type\n        notes[msg.sender] = Note(note);\n    }\n    function getNotes() external view returns(string [] memory){\n        userNotes = notes[msg.sender].note \n        return userNotes;\n    }\n}*/"}},"settings":{"optimizer":{"enabled":true,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"2072","formattedMessage":"Warning: Unused local variable.\n  --> contracts/Notes.sol:12:9:\n   |\n12 |         Note memory myStruct = Note(_note,msg.sender);\n   |         ^^^^^^^^^^^^^^^^^^^^\n\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"end":313,"file":"contracts/Notes.sol","start":293},"type":"Warning"}],"sources":{"@thirdweb-dev/contracts/extension/ContractMetadata.sol":{"ast":{"absolutePath":"@thirdweb-dev/contracts/extension/ContractMetadata.sol","exportedSymbols":{"ContractMetadata":[57],"IContractMetadata":[80]},"id":58,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"39:23:0"},{"absolutePath":"@thirdweb-dev/contracts/extension/interface/IContractMetadata.sol","file":"./interface/IContractMetadata.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":58,"sourceUnit":81,"src":"64:43:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"IContractMetadata","nodeType":"IdentifierPath","referencedDeclaration":80,"src":"468:17:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"468:17:0"}],"canonicalName":"ContractMetadata","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"109:319:0","text":"  @title   Contract Metadata\n  @notice  Thirdweb's `ContractMetadata` is a contract extension for any base contracts. It lets you set a metadata URI\n           for you contract.\n           Additionally, `ContractMetadata` is necessary for NFT contracts that want royalties to get distributed on OpenSea."},"fullyImplemented":false,"id":57,"linearizedBaseContracts":[57,80],"name":"ContractMetadata","nameLocation":"448:16:0","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[66],"constant":false,"documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"492:46:0","text":"@notice Returns the contract metadata URI."},"functionSelector":"e8a3d485","id":9,"mutability":"mutable","name":"contractURI","nameLocation":"566:11:0","nodeType":"VariableDeclaration","overrides":{"id":8,"nodeType":"OverrideSpecifier","overrides":[],"src":"557:8:0"},"scope":57,"src":"543:34:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":7,"name":"string","nodeType":"ElementaryTypeName","src":"543:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"baseFunctions":[72],"body":{"id":29,"nodeType":"Block","src":"1043:126:0","statements":[{"condition":{"id":18,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1057:21:0","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":16,"name":"_canSetContractURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"1058:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":17,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1058:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":24,"nodeType":"IfStatement","src":"1053:76:0","trueBody":{"id":23,"nodeType":"Block","src":"1080:49:0","statements":[{"expression":{"arguments":[{"hexValue":"4e6f7420617574686f72697a6564","id":20,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1101:16:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","typeString":"literal_string \"Not authorized\""},"value":"Not authorized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","typeString":"literal_string \"Not authorized\""}],"id":19,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1094:6:0","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":21,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1094:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":22,"nodeType":"ExpressionStatement","src":"1094:24:0"}]}},{"expression":{"arguments":[{"id":26,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12,"src":"1157:4:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":25,"name":"_setupContractURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":50,"src":"1139:17:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1139:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28,"nodeType":"ExpressionStatement","src":"1139:23:0"}]},"documentation":{"id":10,"nodeType":"StructuredDocumentation","src":"584:392:0","text":"  @notice         Lets a contract admin set the URI for contract-level metadata.\n  @dev            Caller should be authorized to setup contractURI, e.g. contract admin.\n                  See {_canSetContractURI}.\n                  Emits {ContractURIUpdated Event}.\n  @param _uri     keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"},"functionSelector":"938e3d7b","id":30,"implemented":true,"kind":"function","modifiers":[],"name":"setContractURI","nameLocation":"990:14:0","nodeType":"FunctionDefinition","overrides":{"id":14,"nodeType":"OverrideSpecifier","overrides":[],"src":"1034:8:0"},"parameters":{"id":13,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12,"mutability":"mutable","name":"_uri","nameLocation":"1019:4:0","nodeType":"VariableDeclaration","scope":30,"src":"1005:18:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":11,"name":"string","nodeType":"ElementaryTypeName","src":"1005:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1004:20:0"},"returnParameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"1043:0:0"},"scope":57,"src":"981:188:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":49,"nodeType":"Block","src":"1307:129:0","statements":[{"assignments":[37],"declarations":[{"constant":false,"id":37,"mutability":"mutable","name":"prevURI","nameLocation":"1331:7:0","nodeType":"VariableDeclaration","scope":49,"src":"1317:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":36,"name":"string","nodeType":"ElementaryTypeName","src":"1317:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":39,"initialValue":{"id":38,"name":"contractURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"1341:11:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1317:35:0"},{"expression":{"id":42,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":40,"name":"contractURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"1362:11:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":41,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":33,"src":"1376:4:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1362:18:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":43,"nodeType":"ExpressionStatement","src":"1362:18:0"},{"eventCall":{"arguments":[{"id":45,"name":"prevURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":37,"src":"1415:7:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":46,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":33,"src":"1424:4:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":44,"name":"ContractURIUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"1396:18:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1396:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"EmitStatement","src":"1391:38:0"}]},"documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"1175:71:0","text":"@dev Lets a contract admin set the URI for contract-level metadata."},"id":50,"implemented":true,"kind":"function","modifiers":[],"name":"_setupContractURI","nameLocation":"1260:17:0","nodeType":"FunctionDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"_uri","nameLocation":"1292:4:0","nodeType":"VariableDeclaration","scope":50,"src":"1278:18:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":32,"name":"string","nodeType":"ElementaryTypeName","src":"1278:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1277:20:0"},"returnParameters":{"id":35,"nodeType":"ParameterList","parameters":[],"src":"1307:0:0"},"scope":57,"src":"1251:185:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1442:85:0","text":"@dev Returns whether contract metadata can be set in the given execution context."},"id":56,"implemented":false,"kind":"function","modifiers":[],"name":"_canSetContractURI","nameLocation":"1541:18:0","nodeType":"FunctionDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1559:2:0"},"returnParameters":{"id":55,"nodeType":"ParameterList","parameters":[{"constant":false,"id":54,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":56,"src":"1593:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":53,"name":"bool","nodeType":"ElementaryTypeName","src":"1593:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1592:6:0"},"scope":57,"src":"1532:67:0","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":58,"src":"430:1171:0","usedErrors":[]}],"src":"39:1563:0"},"id":0},"@thirdweb-dev/contracts/extension/interface/IContractMetadata.sol":{"ast":{"absolutePath":"@thirdweb-dev/contracts/extension/interface/IContractMetadata.sol","exportedSymbols":{"IContractMetadata":[80]},"id":81,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":59,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"39:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IContractMetadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":60,"nodeType":"StructuredDocumentation","src":"64:264:1","text":"  Thirdweb's `ContractMetadata` is a contract extension for any base contracts. It lets you set a metadata URI\n  for you contract.\n  Additionally, `ContractMetadata` is necessary for NFT contracts that want royalties to get distributed on OpenSea."},"fullyImplemented":false,"id":80,"linearizedBaseContracts":[80],"name":"IContractMetadata","nameLocation":"340:17:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":61,"nodeType":"StructuredDocumentation","src":"364:50:1","text":"@dev Returns the metadata URI of the contract."},"functionSelector":"e8a3d485","id":66,"implemented":false,"kind":"function","modifiers":[],"name":"contractURI","nameLocation":"428:11:1","nodeType":"FunctionDefinition","parameters":{"id":62,"nodeType":"ParameterList","parameters":[],"src":"439:2:1"},"returnParameters":{"id":65,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":66,"src":"465:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":63,"name":"string","nodeType":"ElementaryTypeName","src":"465:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"464:15:1"},"scope":80,"src":"419:61:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":67,"nodeType":"StructuredDocumentation","src":"486:148:1","text":"  @dev Sets contract URI for the storefront-level metadata of the contract.\n       Only module admin can call this function."},"functionSelector":"938e3d7b","id":72,"implemented":false,"kind":"function","modifiers":[],"name":"setContractURI","nameLocation":"648:14:1","nodeType":"FunctionDefinition","parameters":{"id":70,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69,"mutability":"mutable","name":"_uri","nameLocation":"679:4:1","nodeType":"VariableDeclaration","scope":72,"src":"663:20:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":68,"name":"string","nodeType":"ElementaryTypeName","src":"663:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"662:22:1"},"returnParameters":{"id":71,"nodeType":"ParameterList","parameters":[],"src":"693:0:1"},"scope":80,"src":"639:55:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":73,"nodeType":"StructuredDocumentation","src":"700:50:1","text":"@dev Emitted when the contract URI is updated."},"id":79,"name":"ContractURIUpdated","nameLocation":"761:18:1","nodeType":"EventDefinition","parameters":{"id":78,"nodeType":"ParameterList","parameters":[{"constant":false,"id":75,"indexed":false,"mutability":"mutable","name":"prevURI","nameLocation":"787:7:1","nodeType":"VariableDeclaration","scope":79,"src":"780:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":74,"name":"string","nodeType":"ElementaryTypeName","src":"780:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":77,"indexed":false,"mutability":"mutable","name":"newURI","nameLocation":"803:6:1","nodeType":"VariableDeclaration","scope":79,"src":"796:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":76,"name":"string","nodeType":"ElementaryTypeName","src":"796:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"779:31:1"},"src":"755:56:1"}],"scope":81,"src":"330:483:1","usedErrors":[]}],"src":"39:775:1"},"id":1},"contracts/Notes.sol":{"ast":{"absolutePath":"contracts/Notes.sol","exportedSymbols":{"ContractMetadata":[57],"IContractMetadata":[80],"Notes":[136]},"id":137,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":82,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"39:23:2"},{"absolutePath":"@thirdweb-dev/contracts/extension/ContractMetadata.sol","file":"@thirdweb-dev/contracts/extension/ContractMetadata.sol","id":83,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":137,"sourceUnit":58,"src":"63:64:2","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":84,"name":"ContractMetadata","nodeType":"IdentifierPath","referencedDeclaration":57,"src":"155:16:2"},"id":85,"nodeType":"InheritanceSpecifier","src":"155:16:2"}],"canonicalName":"Notes","contractDependencies":[],"contractKind":"contract","fullyImplemented":false,"id":136,"linearizedBaseContracts":[136,57,80],"name":"Notes","nameLocation":"146:5:2","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Notes.Note","id":90,"members":[{"constant":false,"id":87,"mutability":"mutable","name":"note","nameLocation":"206:4:2","nodeType":"VariableDeclaration","scope":90,"src":"199:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":86,"name":"string","nodeType":"ElementaryTypeName","src":"199:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":89,"mutability":"mutable","name":"uid","nameLocation":"229:3:2","nodeType":"VariableDeclaration","scope":90,"src":"221:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":88,"name":"address","nodeType":"ElementaryTypeName","src":"221:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"Note","nameLocation":"184:4:2","nodeType":"StructDefinition","scope":136,"src":"177:62:2","visibility":"public"},{"body":{"id":104,"nodeType":"Block","src":"283:62:2","statements":[{"assignments":[97],"declarations":[{"constant":false,"id":97,"mutability":"mutable","name":"myStruct","nameLocation":"305:8:2","nodeType":"VariableDeclaration","scope":104,"src":"293:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Note_$90_memory_ptr","typeString":"struct Notes.Note"},"typeName":{"id":96,"nodeType":"UserDefinedTypeName","pathNode":{"id":95,"name":"Note","nodeType":"IdentifierPath","referencedDeclaration":90,"src":"293:4:2"},"referencedDeclaration":90,"src":"293:4:2","typeDescriptions":{"typeIdentifier":"t_struct$_Note_$90_storage_ptr","typeString":"struct Notes.Note"}},"visibility":"internal"}],"id":103,"initialValue":{"arguments":[{"id":99,"name":"_note","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":92,"src":"321:5:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":100,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"327:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"327:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":98,"name":"Note","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":90,"src":"316:4:2","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Note_$90_storage_ptr_$","typeString":"type(struct Notes.Note storage pointer)"}},"id":102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"316:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Note_$90_memory_ptr","typeString":"struct Notes.Note memory"}},"nodeType":"VariableDeclarationStatement","src":"293:45:2"}]},"id":105,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":93,"nodeType":"ParameterList","parameters":[{"constant":false,"id":92,"mutability":"mutable","name":"_note","nameLocation":"276:5:2","nodeType":"VariableDeclaration","scope":105,"src":"262:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":91,"name":"string","nodeType":"ElementaryTypeName","src":"262:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"261:21:2"},"returnParameters":{"id":94,"nodeType":"ParameterList","parameters":[],"src":"283:0:2"},"scope":136,"src":"250:95:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":false,"functionSelector":"61c3a7e6","id":109,"mutability":"mutable","name":"notes","nameLocation":"365:5:2","nodeType":"VariableDeclaration","scope":136,"src":"351:19:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Note_$90_storage_$dyn_storage","typeString":"struct Notes.Note[]"},"typeName":{"baseType":{"id":107,"nodeType":"UserDefinedTypeName","pathNode":{"id":106,"name":"Note","nodeType":"IdentifierPath","referencedDeclaration":90,"src":"351:4:2"},"referencedDeclaration":90,"src":"351:4:2","typeDescriptions":{"typeIdentifier":"t_struct$_Note_$90_storage_ptr","typeString":"struct Notes.Note"}},"id":108,"nodeType":"ArrayTypeName","src":"351:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Note_$90_storage_$dyn_storage_ptr","typeString":"struct Notes.Note[]"}},"visibility":"public"},{"body":{"id":124,"nodeType":"Block","src":"423:54:2","statements":[{"expression":{"arguments":[{"arguments":[{"id":118,"name":"_note","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"452:5:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":119,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"458:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"458:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":117,"name":"Note","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":90,"src":"447:4:2","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Note_$90_storage_ptr_$","typeString":"type(struct Notes.Note storage pointer)"}},"id":121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"447:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Note_$90_memory_ptr","typeString":"struct Notes.Note memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Note_$90_memory_ptr","typeString":"struct Notes.Note memory"}],"expression":{"id":114,"name":"notes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"436:5:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Note_$90_storage_$dyn_storage","typeString":"struct Notes.Note storage ref[] storage ref"}},"id":116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"436:10:2","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Note_$90_storage_$dyn_storage_ptr_$_t_struct$_Note_$90_storage_$returns$__$bound_to$_t_array$_t_struct$_Note_$90_storage_$dyn_storage_ptr_$","typeString":"function (struct Notes.Note storage ref[] storage pointer,struct Notes.Note storage ref)"}},"id":122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"436:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":123,"nodeType":"ExpressionStatement","src":"436:34:2"}]},"functionSelector":"e1250ab4","id":125,"implemented":true,"kind":"function","modifiers":[],"name":"createNote","nameLocation":"385:10:2","nodeType":"FunctionDefinition","parameters":{"id":112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":111,"mutability":"mutable","name":"_note","nameLocation":"410:5:2","nodeType":"VariableDeclaration","scope":125,"src":"396:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":110,"name":"string","nodeType":"ElementaryTypeName","src":"396:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"395:21:2"},"returnParameters":{"id":113,"nodeType":"ParameterList","parameters":[],"src":"423:0:2"},"scope":136,"src":"376:101:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":134,"nodeType":"Block","src":"536:35:2","statements":[{"expression":{"id":132,"name":"notes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"556:5:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Note_$90_storage_$dyn_storage","typeString":"struct Notes.Note storage ref[] storage ref"}},"functionReturnParameters":131,"id":133,"nodeType":"Return","src":"549:12:2"}]},"functionSelector":"b4af200d","id":135,"implemented":true,"kind":"function","modifiers":[],"name":"getNotes","nameLocation":"491:8:2","nodeType":"FunctionDefinition","parameters":{"id":126,"nodeType":"ParameterList","parameters":[],"src":"499:2:2"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":130,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":135,"src":"522:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Note_$90_memory_ptr_$dyn_memory_ptr","typeString":"struct Notes.Note[]"},"typeName":{"baseType":{"id":128,"nodeType":"UserDefinedTypeName","pathNode":{"id":127,"name":"Note","nodeType":"IdentifierPath","referencedDeclaration":90,"src":"522:4:2"},"referencedDeclaration":90,"src":"522:4:2","typeDescriptions":{"typeIdentifier":"t_struct$_Note_$90_storage_ptr","typeString":"struct Notes.Note"}},"id":129,"nodeType":"ArrayTypeName","src":"522:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Note_$90_storage_$dyn_storage_ptr","typeString":"struct Notes.Note[]"}},"visibility":"internal"}],"src":"521:15:2"},"scope":136,"src":"482:89:2","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":137,"src":"128:445:2","usedErrors":[]}],"src":"39:976:2"},"id":2}},"contracts":{"@thirdweb-dev/contracts/extension/ContractMetadata.sol":{"ContractMetadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"prevURI","type":"string"},{"indexed":false,"internalType":"string","name":"newURI","type":"string"}],"name":"ContractURIUpdated","type":"event"},{"inputs":[],"name":"contractURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_uri","type":"string"}],"name":"setContractURI","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"contractURI()":"e8a3d485","setContractURI(string)":"938e3d7b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}}},\"title\":\"Contract Metadata\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"}},\"notice\":\"Thirdweb's `ContractMetadata` is a contract extension for any base contracts. It lets you set a metadata URI           for you contract.           Additionally, `ContractMetadata` is necessary for NFT contracts that want royalties to get distributed on OpenSea.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@thirdweb-dev/contracts/extension/ContractMetadata.sol\":\"ContractMetadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@thirdweb-dev/contracts/extension/ContractMetadata.sol\":{\"keccak256\":\"0x86393a27319a054a1cabc9b7b4e97ff0aa33caaa2eb79173858d905e591ad5bc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://66bd1acd03438412fc1f57c6e86eda9dfcbda354b120c0fe115d0f9e6f26c57a\",\"dweb:/ipfs/QmaykDmYfP1ZtbwpgNRvz4Hqf7KJTQijZXn6ucaYT9xxWQ\"]},\"@thirdweb-dev/contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x72afb65f99429230a9d6ca7734853cf8c53264d0d013f1bff3a5625396ee1ff1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8de0d8da22da658225705129bde46f3d18dc511dd300906ca457f04806f200b0\",\"dweb:/ipfs/QmWbTpgvQz3mE4RiBBcHhKJENroMD1ACMeKDECcyuanCvC\"]}},\"version\":1}"}},"@thirdweb-dev/contracts/extension/interface/IContractMetadata.sol":{"IContractMetadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"prevURI","type":"string"},{"indexed":false,"internalType":"string","name":"newURI","type":"string"}],"name":"ContractURIUpdated","type":"event"},{"inputs":[],"name":"contractURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_uri","type":"string"}],"name":"setContractURI","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"contractURI()":"e8a3d485","setContractURI(string)":"938e3d7b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ContractURIUpdated(string,string)\":{\"details\":\"Emitted when the contract URI is updated.\"}},\"kind\":\"dev\",\"methods\":{\"contractURI()\":{\"details\":\"Returns the metadata URI of the contract.\"},\"setContractURI(string)\":{\"details\":\"Sets contract URI for the storefront-level metadata of the contract.       Only module admin can call this function.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Thirdweb's `ContractMetadata` is a contract extension for any base contracts. It lets you set a metadata URI  for you contract.  Additionally, `ContractMetadata` is necessary for NFT contracts that want royalties to get distributed on OpenSea.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@thirdweb-dev/contracts/extension/interface/IContractMetadata.sol\":\"IContractMetadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@thirdweb-dev/contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x72afb65f99429230a9d6ca7734853cf8c53264d0d013f1bff3a5625396ee1ff1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8de0d8da22da658225705129bde46f3d18dc511dd300906ca457f04806f200b0\",\"dweb:/ipfs/QmWbTpgvQz3mE4RiBBcHhKJENroMD1ACMeKDECcyuanCvC\"]}},\"version\":1}"}},"contracts/Notes.sol":{"Notes":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"prevURI","type":"string"},{"indexed":false,"internalType":"string","name":"newURI","type":"string"}],"name":"ContractURIUpdated","type":"event"},{"inputs":[],"name":"contractURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_note","type":"string"}],"name":"createNote","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getNotes","outputs":[{"components":[{"internalType":"string","name":"note","type":"string"},{"internalType":"address","name":"uid","type":"address"}],"internalType":"struct Notes.Note[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"notes","outputs":[{"internalType":"string","name":"note","type":"string"},{"internalType":"address","name":"uid","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_uri","type":"string"}],"name":"setContractURI","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"contractURI()":"e8a3d485","createNote(string)":"e1250ab4","getNotes()":"b4af200d","notes(uint256)":"61c3a7e6","setContractURI(string)":"938e3d7b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_note\",\"type\":\"string\"}],\"name\":\"createNote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNotes\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"note\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"uid\",\"type\":\"address\"}],\"internalType\":\"struct Notes.Note[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"notes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"note\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"uid\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Notes.sol\":\"Notes\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@thirdweb-dev/contracts/extension/ContractMetadata.sol\":{\"keccak256\":\"0x86393a27319a054a1cabc9b7b4e97ff0aa33caaa2eb79173858d905e591ad5bc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://66bd1acd03438412fc1f57c6e86eda9dfcbda354b120c0fe115d0f9e6f26c57a\",\"dweb:/ipfs/QmaykDmYfP1ZtbwpgNRvz4Hqf7KJTQijZXn6ucaYT9xxWQ\"]},\"@thirdweb-dev/contracts/extension/interface/IContractMetadata.sol\":{\"keccak256\":\"0x72afb65f99429230a9d6ca7734853cf8c53264d0d013f1bff3a5625396ee1ff1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8de0d8da22da658225705129bde46f3d18dc511dd300906ca457f04806f200b0\",\"dweb:/ipfs/QmWbTpgvQz3mE4RiBBcHhKJENroMD1ACMeKDECcyuanCvC\"]},\"contracts/Notes.sol\":{\"keccak256\":\"0x8c1b4a10686a96073ed8745501f265394088c3618d7a380de57c773797c6a7a8\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://17434e2a1d8db98913fa1068e0ccbc9d4985d55275c3a4e6b5f1ac4add7636e0\",\"dweb:/ipfs/QmZeHvNC4RtXfY2aWf8UAyfF4C45Z4KP4sZjsMg1MF9MeL\"]}},\"version\":1}"}}}}}